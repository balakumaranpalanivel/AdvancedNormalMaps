#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNormal;
layout (location = 2) in vec2 aTexCoords;
layout (location = 3) in vec3 tangent;

out VS_OUT
{
	vec2 TexCoords;
	vec3 ANormal;
	vec3 FragPos;
	vec3 ViewPos;
} vs_out;

uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform vec3 viewPos;

void main()
{
    vs_out.TexCoords = aTexCoords;
	vs_out.ANormal = mat3(transpose(inverse(model))) * aNormal;
	vs_out.FragPos = vec3(model*vec4(aPos, 1.0));
	vs_out.ViewPos = viewPos;

    gl_Position = projection * view * model * vec4(aPos, 1.0);
}